name: Release MMKV XCFramework

on:
  push:
    branches: [ "main" ]
    tags:
      - 'mmkv-v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for MMKV to release (e.g., 1.3.14)'
        required: true
        type: string

jobs:
  build-and-release:
    name: Build MMKV from Pods to xcframework
    runs-on: macos-latest
    defaults:
      run:
        working-directory: Workspace

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create working directory
        working-directory: .
        run: mkdir -p Workspace

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Check tools
        run: |
          pod --version
          xcodebuild -version

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            # VERSION=${GITHUB_REF#refs/tags/mmkv-v}
            VERSION=1.3.14
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using MMKV version: $VERSION"
      
      - name: Copy Dummy project
        run: cp -r ../DummyXcodeProj/DummyXcodeProj.xcodeproj ./

      - name: Create Podfile
        run: |
          cat > Podfile << EOF
          platform :ios, '16.0'
          use_frameworks!

          target 'DummyXcodeProj' do
            pod 'MMKV', '${{ steps.get_version.outputs.version }}'
          end
          EOF

          echo "Generated Podfile:"
          cat Podfile

      - name: Generate Pods.xcodeproj
        run: |
          pod install --repo-update

      - name: Build iOS Archive
        run: |
          PROJ="Pods/Pods.xcodeproj"
          SCHEME="MMKV"
          
          xcodebuild archive \
            -project "$PROJ" \
            -scheme "$SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath build/MMKV-iOS.xcarchive \
            BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
            SKIP_INSTALL=NO \
            ENABLE_BITCODE=NO

      - name: Build iOS Simulator Archive
        run: |
          PROJ="Pods/Pods.xcodeproj"
          SCHEME="MMKV"
          
          xcodebuild archive \
            -project "$PROJ" \
            -scheme "$SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS Simulator' \
            -archivePath build/MMKV-Sim.xcarchive \
            BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
            SKIP_INSTALL=NO \
            ENABLE_BITCODE=NO

      - name: Create XCFrameworks
        run: |
          xcodebuild -create-xcframework \
            -archive build/MMKV-iOS.xcarchive -framework MMKV.framework \
            -archive build/MMKV-Sim.xcarchive -framework MMKV.framework \
            -output build/MMKV.xcframework

          xcodebuild -create-xcframework \
            -archive build/MMKV-iOS.xcarchive -framework MMKVCore.framework \
            -archive build/MMKV-Sim.xcarchive -framework MMKVCore.framework \
            -output build/MMKVCore.xcframework

      - name: Create Zip Archives
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          
          ditto -c -k --sequesterRsrc --keepParent \
            build/MMKV.xcframework \
            build/MMKV-$VERSION.xcframework.zip

          ditto -c -k --sequesterRsrc --keepParent \
            build/MMKVCore.xcframework \
            build/MMKVCore-$VERSION.xcframework.zip

      - name: Compute Checksums
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          
          swift package compute-checksum build/MMKV-$VERSION.xcframework.zip > MMKV.xcframework.zip.checksum
          swift package compute-checksum build/MMKVCore-$VERSION.xcframework.zip > MMKVCore.xcframework.zip.checksum

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: mmkv-v${{ steps.get_version.outputs.version }}
          release_name: MMKV XCFramework v${{ steps.get_version.outputs.version }}
          body: |
            ## MMKV XCFramework v${{ steps.get_version.outputs.version }}
            
            This release includes MMKV.xcframework built from the official MMKV repository.
            
            ### Supported Platforms
            - iOS (arm64)
            - iOS Simulator (x86_64, arm64)
            
            #### Swift Package Manager
            Add the following to your `Package.swift`:
            ```swift
            .binaryTarget(
                name: "MMKV",
                url: "https://github.com/${{ github.repository }}/releases/download/mmkv-v${{ steps.get_version.outputs.version }}/MMKV-${{ steps.get_version.outputs.version }}.xcframework.zip",
                checksum: "$(cat MMKV.xcframework.zip.checksum)"
            )
            .binaryTarget(
                name: "MMKV",
                url: "https://github.com/${{ github.repository }}/releases/download/mmkv-v${{ steps.get_version.outputs.version }}/MMKVCore-${{ steps.get_version.outputs.version }}.xcframework.zip",
                checksum: "$(cat MMMKVCore.xcframework.zip.checksum.txt)"
            )
            ```
            
          draft: false
          prerelease: false
    
      - name: Upload MMKV XCFramework
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Workspace/build/MMKV-${{ steps.get_version.outputs.version }}.xcframework.zip
          asset_name: MMKV-${{ steps.get_version.outputs.version }}.xcframework.zip
          asset_content_type: application/zip

      - name: Upload MMKVCore XCFramework
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Workspace/build/MMKVCore-${{ steps.get_version.outputs.version }}.xcframework.zip
          asset_name: MMKVCore-${{ steps.get_version.outputs.version }}.xcframework.zip
          asset_content_type: application/zip